#include <iostream>
using namespace std;

struct Node {
    int key;
    Node *left, *right;
    Node(int k) : key(k), left(NULL), right(NULL) {}
};

Node* buildOBST(int keys[], double prob[], int start, int end) {
    if (start > end) return NULL;

    // Choose the key with the highest probability
    int best = start;
    for (int i = start + 1; i <= end; i++)
        if (prob[i] > prob[best]) best = i;

    Node* root = new Node(keys[best]);
    root->left = buildOBST(keys, prob, start, best - 1);
    root->right = buildOBST(keys, prob, best + 1, end);
    return root;
}

void printInOrder(Node* root) {
    if (!root) return;
    printInOrder(root->left);
    cout << root->key << " ";
    printInOrder(root->right);
}

int main() {
    int keys[] = {10, 20, 30, 40};
    double prob[] = {0.4, 0.3, 0.2, 0.1};
    Node* root = buildOBST(keys, prob, 0, 3);
    printInOrder(root);
    return 0;
}